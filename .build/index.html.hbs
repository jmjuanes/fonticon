<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Mochicons</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;700;900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="low.css" />
    <link rel="stylesheet" href="mochicons.css" />
</head>
<body class="bg:dark-700 text:white m:0 p:0 font:inter">
    <header class="h:20 w:full maxw:screen-xl mx:auto p:4 d:flex items:center">
        <div class="d:flex items:center gap:3">
            <div class="d:flex items:center justify:center p:1 r:xl bg:gradient-to-right from:blue-500 to:indigo-300">
                <i class="m-mochi text:white text:4xl"></i>
            </div>
            <div class="text:2xl font:bold">Mochicons</div>
        </div>
        <div class="ml:auto">
            <a href="{{repository}}" target="_blank" class="text:white text:no-underline d:flex gap:2 o:70 o:100:hover">
                <i class="m-external-link"></i>
                <span class="font:bold">GitHub</span>
            </a>
        </div>
    </header>
    <section class="w:full maxw:screen-xl mx:auto px:4 py:20">
        <div class="text:6xl font:black text:center mb:4">
            <span class="text:transparent bg:text bg:gradient-to-right from:blue-400 to:indigo-300">Hand-made SVG icons for web</span>
        </div>
        <div class="text:xl font:bold text:center lh:relaxed maxw:screen-sm mx:auto">
            An open source collection of {{iconsCount}} SVG icons for your web projects. With Node.js and React support.
        </div>
        <div class="d:flex justify:center mt:8">
            <a href="{{repository}}" class="d:flex items:center gap:2 p:3 r:xl cursor:pointer text:no-underline b:2 b:solid b:white text:white bg:white:hover text:dark-900:hover">
                <i class="m-book text:2xl"></i>
                <strong class="text:lg font:bold">Documentation</strong>
            </a>
        </div>
        <div class="mt:3 text:center text:xs text:light-900 o:60">
            Currently <b>v{{version}}</b>
        </div>
    </section>
    <section class="w:full maxw:screen-xl mx:auto p:4">
        <div class="mb:6">
            <div class="d:flex items:center w:full bg:dark-300 text:white p:4 r:xl">
                <i class="m-search text:2xl"></i>
                <input type="text" id="search" class="d:block bg:transparent text:white b:0 outline:0 w:full" placeholder="Search for icons...">
            </div>
        </div>

        <div class="d:grid cols:3 cols:6@md cols:10@lg gap:2 w:full">
            {{#each icons}}
                <div class="d:flex flex:col p:4 r:lg bg:dark-100:hover cursor:pointer" data-icon="{{this.name}}">
                    <div class="d:flex justify:center">
                        <i class="m-{{this.name}} text:3xl"></i>
                    </div>
                    <div class="o:50 text:2xs text:center mt:2">
                        <span>{{this.name}}</span>
                    </div>
                </div>
            {{/each}}
        </div>
    </section>
    <footer class="w:full maxw:screen-xl mx:auto px:4 py:32 text:center text:light-900">
        <div class="text:center text:sm">
            Made with <i class="m-heart"></i> by <a href="https://github.com/jmjuanes" class="text:white font:bold text:no-underline">Josemi Juanes</a>.
        </div>
        <div class="text:center o:50 text:xs mt:2">
            Currently <b>v{{version}}</b>. Icons are Public Domain.
        </div>
    </footer>
    <script type="text/javascript">
        let allVisible = true;
        document.querySelector("input#search").addEventListener("input", event => {
            const value = event.target.value || "";
            // let count = 0;
            if (value.length >= 3 || !allVisible) {
                allVisible = value.length < 3;
                Array.from(document.querySelectorAll("div[data-icon]")).forEach(item => {
                    if (value.length < 3 || item.dataset.icon.includes(value)) {
                        // count = count + 1;
                        item.style.display = "";
                    }
                    else {
                        item.style.display = "none";
                    }
                });
                // Hide or display the empty block
                // document.querySelector("div#empty").style.display = count === 0 ? "" : "none";
            }
        });
    </script>
</body>
